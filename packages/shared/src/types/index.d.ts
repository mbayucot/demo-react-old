export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: any;
};

export type CollectionMetadata = {
  __typename?: 'CollectionMetadata';
  currentPage: Scalars['Int'];
  limitValue: Scalars['Int'];
  totalCount: Scalars['Int'];
  totalPages: Scalars['Int'];
};

export type Comment = {
  __typename?: 'Comment';
  ancestry?: Maybe<Scalars['String']>;
  body: Scalars['String'];
  children?: Maybe<Array<Comment>>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']>;
  id: Scalars['ID'];
  parentId?: Maybe<Scalars['ID']>;
  postId: Scalars['Int'];
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>;
  user?: Maybe<User>;
};

/** Autogenerated return type of CreateComment */
export type CreateCommentPayload = {
  __typename?: 'CreateCommentPayload';
  comment?: Maybe<Comment>;
  errors?: Maybe<Array<UserError>>;
};

/** Autogenerated return type of CreatePost */
export type CreatePostPayload = {
  __typename?: 'CreatePostPayload';
  errors?: Maybe<Array<UserError>>;
  post?: Maybe<Post>;
};

/** Autogenerated return type of CreateSubscription */
export type CreateSubscriptionPayload = {
  __typename?: 'CreateSubscriptionPayload';
  errors?: Maybe<Array<UserError>>;
  user: User;
};

/** Autogenerated return type of CreateUser */
export type CreateUserPayload = {
  __typename?: 'CreateUserPayload';
  errors?: Maybe<Array<UserError>>;
  user?: Maybe<User>;
};

/** Autogenerated return type of DestroyPost */
export type DestroyPostPayload = {
  __typename?: 'DestroyPostPayload';
  post: Post;
};

/** Autogenerated return type of DestroyUser */
export type DestroyUserPayload = {
  __typename?: 'DestroyUserPayload';
  user: User;
};

export type Mutation = {
  __typename?: 'Mutation';
  createComment: CreateCommentPayload;
  createPost: CreatePostPayload;
  createSubscription: CreateSubscriptionPayload;
  createUser: CreateUserPayload;
  destroyPost: DestroyPostPayload;
  destroyUser: DestroyUserPayload;
  reactPost: ReactPostPayload;
  updatePost: UpdatePostPayload;
  updateUser: UpdateUserPayload;
};


export type MutationCreateCommentArgs = {
  body?: InputMaybe<Scalars['String']>;
  parentId?: InputMaybe<Scalars['ID']>;
  postId?: InputMaybe<Scalars['ID']>;
};


export type MutationCreatePostArgs = {
  body?: InputMaybe<Scalars['String']>;
  tagList?: InputMaybe<Array<Scalars['String']>>;
  title?: InputMaybe<Scalars['String']>;
};


export type MutationCreateSubscriptionArgs = {
  token: Scalars['String'];
};


export type MutationCreateUserArgs = {
  email?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  lastName?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
};


export type MutationDestroyPostArgs = {
  id: Scalars['ID'];
};


export type MutationDestroyUserArgs = {
  id: Scalars['ID'];
};


export type MutationReactPostArgs = {
  id: Scalars['ID'];
  weight: Scalars['ID'];
};


export type MutationUpdatePostArgs = {
  attributes: PostAttributes;
  id: Scalars['ID'];
};


export type MutationUpdateUserArgs = {
  attributes: UserAttributes;
  id?: InputMaybe<Scalars['ID']>;
};

export type Plan = {
  __typename?: 'Plan';
  amount: Scalars['Int'];
  id: Scalars['ID'];
  priceId: Scalars['Int'];
  productId: Scalars['Int'];
};

export type Post = {
  __typename?: 'Post';
  body: Scalars['String'];
  comments?: Maybe<Array<Comment>>;
  createdAt?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  slug?: Maybe<Scalars['String']>;
  tagList?: Maybe<Array<Scalars['String']>>;
  tags?: Maybe<Array<Tag>>;
  title: Scalars['String'];
  updatedAt?: Maybe<Scalars['String']>;
  user?: Maybe<User>;
};

/** Attributes for creating or updating a blog post */
export type PostAttributes = {
  /** Full body of the post */
  body?: InputMaybe<Scalars['String']>;
  /** Tags of post */
  tagList?: InputMaybe<Array<Scalars['String']>>;
  /** Header for the post */
  title?: InputMaybe<Scalars['String']>;
};

export type PostCollection = {
  __typename?: 'PostCollection';
  collection: Array<Post>;
  metadata: CollectionMetadata;
};

export type Query = {
  __typename?: 'Query';
  plans?: Maybe<Array<Plan>>;
  post: Post;
  posts?: Maybe<PostCollection>;
  tags?: Maybe<Array<Tag>>;
  user: User;
  users?: Maybe<UserCollection>;
};


export type QueryPostArgs = {
  id: Scalars['ID'];
};


export type QueryPostsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  sort?: InputMaybe<Scalars['String']>;
  tag?: InputMaybe<Scalars['String']>;
};


export type QueryTagsArgs = {
  query?: InputMaybe<Scalars['String']>;
};


export type QueryUserArgs = {
  id: Scalars['ID'];
};


export type QueryUsersArgs = {
  page?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of ReactPost */
export type ReactPostPayload = {
  __typename?: 'ReactPostPayload';
  post: Post;
};

export type Tag = {
  __typename?: 'Tag';
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of UpdatePost */
export type UpdatePostPayload = {
  __typename?: 'UpdatePostPayload';
  errors?: Maybe<Array<UserError>>;
  post: Post;
};

/** Autogenerated return type of UpdateUser */
export type UpdateUserPayload = {
  __typename?: 'UpdateUserPayload';
  errors?: Maybe<Array<UserError>>;
  user: User;
};

export type User = {
  __typename?: 'User';
  createdAt?: Maybe<Scalars['ISO8601DateTime']>;
  email: Scalars['String'];
  encryptedPassword?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  lastName?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  password: Scalars['String'];
  rememberCreatedAt?: Maybe<Scalars['ISO8601DateTime']>;
  resetPasswordSentAt?: Maybe<Scalars['ISO8601DateTime']>;
  resetPasswordToken?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>;
};

/** Attributes for creating or updating a blog post comment */
export type UserAttributes = {
  /** Full body of the comment */
  email?: InputMaybe<Scalars['String']>;
  /** Full body of the comment */
  firstName?: InputMaybe<Scalars['String']>;
  /** Full body of the comment */
  lastName?: InputMaybe<Scalars['String']>;
};

export type UserCollection = {
  __typename?: 'UserCollection';
  collection: Array<User>;
  metadata: CollectionMetadata;
};

/** A user-readable error */
export type UserError = {
  __typename?: 'UserError';
  /** A description of the error */
  message: Scalars['String'];
  /** Which input value this error came from */
  path?: Maybe<Array<Scalars['String']>>;
};
